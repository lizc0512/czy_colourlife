apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.mob.sdk'
android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "cn.net.cyberway"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 95
        versionName "6.6.20"
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }


        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }
    }

    signingConfigs {
        release {
            storeFile file('colourlife.keystore')
            storePassword 'colourlife'
            keyAlias 'colourlife'
            keyPassword 'colourlife'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
        }
        debug {
            signingConfig signingConfigs.release
            debuggable true
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    //指定打包后应用名称
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == "release") {
                outputFileName = "app_v${defaultConfig.versionName}_${getPackageInfo(variant)}_${releaseTime()}.apk"
            } else {
                outputFileName = "app_${defaultConfig.versionName}_${getPackageInfo(variant)}_${releaseTime()}_debug.apk"
            }
            variant.assemble.doLast {
                copyBuildApk()
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res',
                           'src/main/java/cn/net/cyberway/view/refreshlayout/res',
                           'src/main/java/com/user/res',
                           'src/main/java/com/debug/res',
                           "src/main/java/com/insthub/res",
                           "src/main/java/com/pay/res",
                           "src/main/java/com/jsbridge/res",
                           "src/main/java/com/scanCode/res",
                           "src/main/java/com/imagepicker/res",
                           "src/main/java/com/update/res",
                           "src/main/java/com/banner/res",
                           "src/main/java/com/repair/res",
                           "src/main/java/com/wheel/res",
                           "src/main/java/com/feed/res",
                           "src/main/java/com/notification/res",
                           "src/main/java/com/eparking/res",
                           "src/main/java/com/eparking/view/keyboard/res",
                           "src/main/java/com/eparking/view/cardcamera/res",
                           'src/main/java/com/door/res',
                           "src/main/java/com/cardcoupons/res",
                           "src/main/java/com/about/res",
                           "src/main/java/com/equipment/res",
                           "src/main/java/com/setting/res",
                           "src/main/java/com/invite/res",
                           "src/main/java/com/customerInfo/res",
                           "src/main/java/com/message/res",
                           "src/main/java/com/cashier/res",
                           "src/main/java/com/gesturepwd/res",
                           'src/main/java/com/jpush/res',
                           "src/main/java/com/Neighborhood/res",
                           "src/main/java/cn/net/cyberway/home/res",
                           "src/main/java/com/gem/res",
                           "src/main/java/com/popupScreen/res",
                           "src/main/java/com/myproperty/res",
                           "src/main/java/com/mycarinfo/res",
                           "src/main/java/com/permission/res",
                           "src/main/java/com/im/res",
                           "src/main/java/com/allapp/res",
                           "src/main/java/com/audio/res",

            ]
            jniLibs.srcDirs = ["src/main/java/com/jpush/jniLibs", "src/main/jniLibs", "src/main/java/com/audio/jniLibs"]
        }

    }
    packagingOptions {
        doNotStrip "*/armeabi/libdeepknow-lib.so"
        doNotStrip "*/armeabi-v7a/libdeepknow-lib.so"
        doNotStrip "*/x86/libdeepknow-lib.so"
        doNotStrip "*/arm64-v8a/libdeepknow-lib.so"
        doNotStrip "*/x86_64/libdeepknow-lib.so"
    }
    MobSDK {
        appKey "85f512550716"
        appSecret "5af0f85a0b912efa58f9196628cdb635"

        ShareSDK {
            //平台配置信息
            devInfo {
                Wechat {
                    appId "wx7dbb4b89f24c5e3e"
                    appSecret "9c1295fffe471873fb496c357ffdde57"
                }
                WechatMoments {
                    AppId = "wx7dbb4b89f24c5e3e"
                    AppSecret = "9c1295fffe471873fb496c357ffdde57"
                }
                QQ   {
                    AppId = "1101958589"
                    AppSecret = "PnmkLAKXhObXuyQP"
                }
            }
        }

    }

}


repositories {
    flatDir {
        dirs '../app/libs'
    }
    google()
}
greendao {
    schemaVersion 7
    daoPackage 'com.im.greendao'
    targetGenDir 'src/main/java'
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':huxin_sdk')
    implementation project(':sobotsdk')
    implementation(name: 'iJMSafeKeyboard', ext: 'aar')
    implementation(name: 'shanyan_sdk_v2.2.0.5', ext: 'aar')
    implementation(name: 'mylibrary-release', ext: 'aar')
    implementation(name: 'jdPaySDK_Android_JDMall', ext: 'aar')
    compileOnly files('sdknec/classes123.jar')
    implementation(name: 'PayChannel-release', ext: 'aar')
    compileOnly files('sdknec/classes.jar')
    implementation 'com.flyco.banner:FlycoBanner_Lib:2.0.2@aar'
    implementation 'com.navercorp.volleyextensions:volley-views:2.0.1'
    implementation(name: 'colourfullifesdk-2.0', ext: 'aar')
    implementation('com.alibaba.android:ultraviewpager:1.0.7.7@aar') {
        transitive = true
    }
    implementation('com.alibaba.android:vlayout:1.2.8@aar') {
        transitive = true
    }
    implementation 'com.yanzhenjie:recyclerview-swipe:1.1.4'
    implementation(name: 'geetest_deepknow_android_v0.3.8', ext: 'aar')
    implementation(name: 'geetest_sensebot_android_v0.1.3', ext: 'aar')
    /*faceBook良心动画开源库*/
    implementation files('src/main/java/com/jpush/libs/jcore-android-1.2.0.jar')
    implementation files('src/main/java/com/jpush/libs/jpush-android-3.1.2.jar')
    implementation 'com.facebook.rebound:rebound:0.3.8'
    implementation 'com.yanzhenjie.nohttp:nohttp:1.1.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.github.ittianyu:BottomNavigationViewEx:1.2.4'
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:support-v4:${SUPPORT_VERSION}"
    implementation "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
    implementation "com.android.support:cardview-v7:${SUPPORT_VERSION}"
    implementation "com.android.support:design:${SUPPORT_VERSION}"
    implementation "com.android.support:support-v13:${SUPPORT_VERSION}"
    implementation "com.android.support:exifinterface:${SUPPORT_VERSION}"
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    implementation 'com.annimon:stream:1.1.9'
    implementation 'cn.bingoogolapple:bga-banner:2.2.5@aar'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.31'
    implementation files('libs/qndroid-rtc-2.1.0.jar')
    //exoplayer视频播放
    implementation 'com.google.android.exoplayer:exoplayer:2.9.5'
    //腾讯热更新 bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    //腾讯人脸识别
    implementation(name: 'AuthSdk', ext: 'aar')
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.3.1'
    //乐开
    implementation(name: 'lekai-open-sdk-v3.0.8.1', ext: 'aar')
    //数位场景识别 保留
}

project.afterEvaluate {
    handleBuildTag()
}

def copyBuildApk() {
    copy {
        from("${buildDir}/outputs/apk/release") {
            include "*.apk"
        }
        into '../dist'
    }
}


def handleBuildTag() {
    def launch = getLaunchMode()
    if (launch != null) {
        def appCfgFilePath = "../huxin_sdk/src/main/java/com/youmai/hxsdk/config/AppConfig.java"
        def appCfgRegexStr = "public\\s+final\\s+static\\s+int\\s+LAUNCH_MODE\\s+=\\s+[012];"
        def appCfgReplaceStr = "public final static int LAUNCH_MODE = " + launch + ";"
        handleReplaceSrc project, appCfgRegexStr, appCfgReplaceStr, appCfgFilePath
    }
}


def getLaunchMode() {
    if (project.hasProperty('launch_mode')) {
        return project.getProperties().getAt('launch_mode')
    } else {
        return 1      //default 正式环境
    }
}

def getPackageInfo(variant) {
    def launch = getLaunchMode()

    if (launch == "0") {
        return "test_colourlife"
    } else if (launch == "1") {
        return "beta_colourlife"
    } else if (launch == "2") {
        return "rel_colourlife"
    }
}


def static handleReplaceSrc(project, regexStr, replaceStr, filePath) {
    def srcFile = project.file filePath
    def newReplaceStr = srcFile.text.replaceAll regexStr, replaceStr
    srcFile.write newReplaceStr, "UTF-8"
}

def static releaseTime() {
    return new Date().format("MMdd_HHmm")
}
